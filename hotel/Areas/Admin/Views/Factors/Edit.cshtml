@model Hotel.Models.ViewModels.FactorsViewModel

@{
    ViewBag.Title = "ویرایش فاکتور";
}

<h2>ویرایش فاکتور</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.FactorId)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.RegisterUserId)
        <section id="EditFactor">
            <div class="form-row mt-4">

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.UserId, new { @class = "control-label" })
                    @Html.EditorFor(model => model.User.MobileNumber, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.IsFainally, "", new { @class = "text-danger" })
                  
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ValidateTime, new { @class = "control-label " })
                    @Html.EditorFor(model => model.ValidateTime, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.ValidateTime, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FainallyDate, new { @class = "control-label" })
                    @Html.EditorFor(model => model.FainallyDate, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.FainallyDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.RegisterDate, new { @class = "control-label " })
                    @Html.EditorFor(model => model.RegisterDate, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.RegisterDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Price, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Description, new { @class = "control-label " })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>


                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.IsFainally, new { @class = "control-label " })
                    @Html.EditorFor(model => model.IsFainally, new { htmlAttributes = new { @class = "check-isactive " } })
                    @Html.ValidationMessageFor(model => model.IsFainally, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Term.TermName, "دوره", new { @class = "control-label" })
                    @Html.DropDownList("TermId", String.Empty)
                    @Html.ValidationMessageFor(model => model.Term.TermName, "", new { @class = "text-danger" })
                </div>*@

            </div>
        </section>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ذخیره تغییرات" class="btn btn-warning" /> |
                @Html.ActionLink("برگشت به مدیریت", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
